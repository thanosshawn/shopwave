
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Public read, admin write
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Users: Profile data can be read by anyone (if needed for public profiles),
    // but only the authenticated user can write to their own profile.
    // Admins can potentially write to any user profile (use with caution).
    match /users/{userId} {
      allow read: if true; // Or more restrictive: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || request.auth.token.isAdmin == true);

      // Cart: Only the user can access their own cart.
      match /cart/{cartItemId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Orders: Only the authenticated user can create orders for themselves.
    // Users can only read their own orders. Admins can read all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (request.resource.data.userId == request.auth.uid || request.auth.token.isAdmin == true);
      // Update/delete typically handled by backend/admin processes, not directly by users.
      allow update, delete: if request.auth != null && request.auth.token.isAdmin == true;
    }
  }
}
