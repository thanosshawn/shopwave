
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }
    
    // Helper function to check if a user is an admin via custom claims
    // This is generally preferred for server-side checks or rules that depend on auth state
    function isAdminClaim(request) {
      return request.auth != null && request.auth.token.isAdmin == true;
    }

    // Products:
    // - Anyone can read products.
    // - Only authenticated admins can write (create, update, delete) products.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdminClaim(request); // Use claims for writes
    }
    // Allow admins to list all products
     match /products {
      allow list: if true; // Anyone can list products
    }


    // User-specific data (e.g., profiles, carts, orders if stored per user)
    match /users/{userId}/{document=**} {
      // Allow user to read/write their own data.
      // Admins can read any user's data (useful for support, etc.)
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdminClaim(request);
    }
    
    // Carts (if stored as subcollection under users)
    match /users/{userId}/cart/{cartItemId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      // Admins could potentially read carts for support, but not write unless explicitly needed.
      allow read: if isAdminClaim(request);
    }

    // Orders:
    // - Authenticated users can create their own orders.
    // - Users can read their own orders.
    // - Admins can read all orders.
    // - Generally, orders should not be updatable or deletable by users after creation. Admins might need update for status changes.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdminClaim(request));
      allow update: if isAdminClaim(request); // For admins to update order status, etc.
      // Deleting orders might be restricted even for admins, or handled via soft delete.
      // allow delete: if isAdminClaim(request);
    }
  }
}
